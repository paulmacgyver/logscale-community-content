name: USB Device Control Activity
updateFrequency: never
timeSelector: {}
sharedTimeInterval:
  enabled: true
  isLive: false
  start: 7d
widgets:
  1e8702f5-4aa0-4442-8f35-3e9cfbdc2968:
    x: 0
    y: 0
    height: 4
    queryString: |-
      #event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      | top(DeviceManufacturer, limit=10)
      | Count:=rename(_count)
    visualization: table-view
    start: 7d
    width: 3
    title: Vendor Name
    type: query
  1579ba28-1956-4d6f-bbf4-ea89df454e71:
    x: 3
    y: 0
    height: 4
    queryString: |
      #event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      | top(DeviceProduct, limit=10)
      | Count:=rename(_count)
    visualization: table-view
    start: 7d
    width: 3
    title: Product Name
    type: query
  6506e962-f770-48a7-b569-b7d90383ed75:
    x: 6
    y: 0
    height: 4
    queryString: |
      #event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      | DcPolicyAction match {
          0 => DcPolicyAction:="Allow" ;
          1 => DcPolicyAction:="Block" ;
          2 => DcPolicyAction:="Mass Storage" ;
          * => * ;
        }

      | top(DcPolicyAction, limit=10)
      | Count:=rename(_count)
    visualization: table-view
    start: 7d
    width: 2
    title: Policy Action
    type: query
  7f6b144f-dc15-40d2-9029-cf0379161da2:
    x: 0
    y: 4
    height: 5
    queryString: |-
      #event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation|DcUsbInterfaceDescriptor)/

      | join({#event_simpleName=DcUsbInterfaceDescriptor DeviceUsbClass != 0 | rename(DeviceUsbClass, as=DeviceUsbClass_2)}, field=DeviceDescriptorSetHash, include=DeviceUsbClass_2, mode=left)

      | DeviceUsbClass match {
          0 => DeviceUsbClass := DeviceUsbClass_2;
          * => *;
        }
      | drop(DeviceUsbClass_2)

      // Add Mapping for Values
      | DeviceConnectionStatus match {
          1  => DeviceConnectionStatus:="Connected" ;
          2  => DeviceConnectionStatus:="Failed Enumeration" ;
          3  => DeviceConnectionStatus:="General Failure" ;
          4  => DeviceConnectionStatus:="Caused Over Current" ;
          5  => DeviceConnectionStatus:="Not Enough Power" ;
          6  => DeviceConnectionStatus:="Not Enough Bandwidth" ;
          7  => DeviceConnectionStatus:="Hub Nested Too Deeply" ;
          8  => DeviceConnectionStatus:="In Legacy Hub" ;
          9  => DeviceConnectionStatus:="Enumerating" ;
          10 => DeviceConnectionStatus:="Reset" ;
          * => * ;
        }

      | DeviceUsbClass match {
          0   => DeviceUsbClass:="Per-interface" ;
          1   => DeviceUsbClass:="Audio" ;
          2   => DeviceUsbClass:="Communication" ;
          3   => DeviceUsbClass:="Human Interface Device" ;
          5   => DeviceUsbClass:="Physical" ;
          6   => DeviceUsbClass:="Still image (camera)" ;
          7   => DeviceUsbClass:="Printer" ;
          8   => DeviceUsbClass:="Mass storage" ;
          9   => DeviceUsbClass:="USB hub" ;
          10  => DeviceUsbClass:="CDC (Communications)" ;
          11  => DeviceUsbClass:="Content Smart Card" ;
          13  => DeviceUsbClass:="Content Security" ;
          14  => DeviceUsbClass:="Video" ;
          224 => DeviceUsbClass:="Wireless controller" ;
          239 => DeviceUsbClass:="Wireless Misc" ;
          254 => DeviceUsbClass:="Application-specific" ;
          255 => DeviceUsbClass:="Vendor-specific" ;
          *   => *
        }

      | DcPolicyAction match {
          0 => DcPolicyAction:="Allow" ;
          1 => DcPolicyAction:="Block" ;
          2 => DcPolicyAction:="Mass Storage" ;
          * => *
        }

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      // Display values
      | table([@timestamp, ComputerName, DeviceManufacturer, DeviceProduct, DevicePropertyDeviceDescription, DeviceUsbClass, DcPolicyAction, event_platform], limit=1000)
    visualization: table-view
    start: 7d
    width: 12
    title: USB Device Control Activity
    type: query
  ea0f4b8b-1f5c-44c2-9dcd-9c9f37472bd2:
    x: 10
    y: 0
    height: 4
    queryString: |-
      // Query / join logic
      | #event_simpleName=/(DcUsbDeviceConnected|DcUsbInterfaceDescriptor)/ 
      | DeviceUsbClass=*
      | join({#event_simpleName=DcUsbInterfaceDescriptor DeviceUsbClass != 0 | rename(DeviceUsbClass, as=DeviceUsbClass_2)}, field=DeviceDescriptorSetHash, include=DeviceUsbClass_2, mode=left)
      | DeviceUsbClass match {
          0 => DeviceUsbClass:=DeviceUsbClass_2;
          * => *;
        }
      | drop(DeviceUsbClass_2)

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      | DeviceUsbClass match {
          0   => DeviceUsbClass:="Per-interface" ;
          1   => DeviceUsbClass:="Audio" ;
          2   => DeviceUsbClass:="Communication" ;
          3   => DeviceUsbClass:="Human Interface Device" ;
          5   => DeviceUsbClass:="Physical" ;
          6   => DeviceUsbClass:="Still image (camera)" ;
          7   => DeviceUsbClass:="Printer" ;
          8   => DeviceUsbClass:="Mass storage" ;
          9   => DeviceUsbClass:="USB hub" ;
          10  => DeviceUsbClass:="CDC (Communications)" ;
          11  => DeviceUsbClass:="Content Smart Card" ;
          13  => DeviceUsbClass:="Content Security" ;
          14  => DeviceUsbClass:="Video" ;
          224 => DeviceUsbClass:="Wireless controller" ;
          239 => DeviceUsbClass:="Wireless Misc" ;
          254 => DeviceUsbClass:="Application-specific" ;
          255 => DeviceUsbClass:="Vendor-specific" ;
          *   => *
        }

      | top(DeviceUsbClass, limit=10)
      | Count:=rename(_count)
    visualization: table-view
    start: 7d
    width: 2
    title: USB Device Class
    type: query
  4f1a3508-a46e-43ed-befd-11bb959aabd3:
    x: 8
    y: 0
    height: 4
    queryString: |
      #event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/

      // Add the ComputerName
      | $"crowdstrike/fltr-core:zComputerName"()

      // Parameters
      | wildcard(field=ComputerName, pattern=?ComputerName, ignoreCase=true)
      | wildcard(field=DeviceProduct, pattern=?DeviceProduct, ignoreCase=true)
      | wildcard(field=DeviceManufacturer, pattern=?DeviceManufacturer, ignoreCase=true)
      | wildcard(field=event_platform, pattern=?event_platform, ignoreCase=true)

      | top(event_platform, limit=10)
      | Count:=rename(_count)
    visualization: table-view
    start: 7d
    width: 2
    title: Event Platform
    type: query
$schema: https://schemas.humio.com/dashboard/v0.4.0
parameters:
  DcUsbDevice:
    label: DcUsbDevice
    order: 50
    values:
    - DcUsbDeviceConnected
    - DcUsbDeviceDisconnected
    - DcUsbDevicePolicyViolation
    type: list
    defaultValue: DcUsbDeviceConnected
  DeviceProduct:
    label: DeviceProduct
    query: '#event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/
      | groupBy(DeviceProduct, limit=50)'
    timeInterval: 7d
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    order: 50
    valueField: DeviceProduct
  event_platform:
    label: event_platform
    query: '#event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/
      | groupBy(event_platform, limit=50)'
    timeInterval: 7d
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    order: 50
    valueField: event_platform
  ComputerName:
    label: ComputerName
    query: '#event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/
      | $"crowdstrike/fltr-core:zComputerName"() | groupBy(ComputerName, limit=50)'
    timeInterval: 1d
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    order: 50
    valueField: ComputerName
  DeviceManufacturer:
    label: DeviceManufacturer
    query: '#event_simpleName=/(DcUsbDeviceConnected|DcUsbDeviceDisconnected|DcUsbDevicePolicyViolation)/
      | groupBy(DeviceManufacturer, limit=50)'
    timeInterval: 7d
    useDashboardTimeIfSet: true
    type: query
    defaultValue: '*'
    order: 50
    valueField: DeviceManufacturer
